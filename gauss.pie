#lang pie

;; We must define addition on the natural numbers for gauss

(claim step-+
  (-> Nat
    Nat))

(define step-+
  (lambda (+n-1)
    (add1 +n-1)))

(claim +
  (-> Nat Nat
    Nat))

(define +
  (lambda (n j)
    (iter-Nat n
      j
      step-+)))

(claim gauss
  (-> Nat
      Nat))

;; The following is not quite correct! We cannot define a type
;; in terms of itself.

;(define gauss
;  (lambda (n)
;    (which-Nat n
;      0
;      (lambda (n-1)
;        (+ (add1 n-1) (gauss n-1))))))

;; The step function for gauss
(claim step-gauss
  (-> Nat Nat
      Nat))

;; When used in gauss, this will
;; do basically n + gauss(n - 1)
(define step-gauss
  (lambda (n-1 gaussn-1)
    (+ (add1 n-1) gaussn-1)))

;; The proper definition of gauss
(define gauss
  (lambda (n)
    (rec-Nat n
      0
      step-gauss)))

(gauss 3)